require_relative 'analyze_city'
require_relative 'cluster'
require 'date'

file 'city-event.json' do |t|
  target = t.name
  puts "generating #{target}"

  city = Masaki::Players::fetch_event_list.find_all {|x|
    x['event_title'].start_with?("シティリーグ2023 シーズン1")
  }
  File.write(target, city.to_json)
end

file 'city-deck-date.json' => ['city-event.json'] do |t|
  target = t.name
  puts "generating #{target}"

  event_list ||= JSON.parse(File.read('city-event.json'))
  keys = event_list.map {|x| x['event_holding_id']}

  db = Masaki::KVSCache.new("city_result")
  events = keys.map do |key|
    cache = db.fetch(key)
    if cache
      page = cache
    else
      page = Masaki::Players::fetch_result_page(key)
      db.store(key, page)
    end
    JSON.parse(page)
  end
  db.close

  decks = []
  events.each do |ev|
    decks += Masaki::Players::parse(ev)
  end

  Masaki::Analyze.import_deck(decks)

  File.write(target, decks.to_json)
  pp decks.size
end

task :world => [:deck_and_date] do |t|
  $world = MasakiWorld.new
end

task :deck_and_date => ['city-deck-date.json'] do |t|
  $deck_and_date = JSON.parse(File.read('city-deck-date.json'))
end

task :analyze, [:lower, :upper, :threshold] => [:world, :deck_and_date] do |t, args|
  range = Range.new(args[:lower], args[:upper])
  threshold = (args[:threshold] || 0.1).to_f
  pp range, threshold

  report = Masaki::Analyze.analyze($world, $deck_and_date, range, threshold)

  pp report
end

file 'bar.html' => ['report_rough.json', 'bar.rhtml'] do |t|
  target = t.name
  puts "generating #{target}"

  system("erb bar.rhtml > bar.html")
end

task :default => [:world] do
  origin = Date.parse('2022-10-07') # 金曜日始まり
  today = Date.today
  rough = []
  detail = []

  while origin < today
    range = Range.new(origin.to_s, (origin + 6).to_s)
    origin += 7

    rough << Masaki::Analyze.analyze($world, $deck_and_date, range, 0.3)
    detail << Masaki::Analyze.analyze($world, $deck_and_date, range, 0.05)
  end

  File.write("report_rough.json", rough.to_json)
  File.write("report_detail.json", detail.to_json)
end